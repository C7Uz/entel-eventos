{"version":3,"file":"useApi-aa853999.js","sources":["../../../../composables/useApi.ts"],"sourcesContent":["import { InjectionKey, inject, provide } from 'vue'\nimport axios, { AxiosInstance } from 'axios'\n\n// import { useAuth } from '/@src/stores/modules/auth/auth.module'\nimport { useRouter, useRoute } from 'vue-router'\n\nexport const apiSymbol: InjectionKey<AxiosInstance> = Symbol()\n\nexport function provideApi() {\n    // const runtimeConfig = useRuntimeConfig()\n  // Here we set the base URL for all requests made to the api\n  const api = axios.create({\n    baseURL: 'https://api.larutaentelempresas.pe',\n  })\n\n  // We set an interceptor for each request to\n  // include Bearer token to the request if user is logged in\n  api.interceptors.request.use((config) => {\n    // const auth = useAuth();\n    const configParams = config.params\n    const configHeaders = config.headers\n    config.params = { ...configParams }\n\n    /* if (auth.isLoggedIn) {\n      config.headers = {\n        ...configHeaders,\n        Authorization: `Bearer ${auth.token}`,\n      }\n    } else {\n      config.headers = {\n        ...configHeaders,\n        // 'Access-Control-Allow-Origin': `*`,\n        // 'Access-Control-Allow-Credentials': `true`,\n        // 'Access-Control-Allow-Headers': `Origin, X-Requested-With, Content-Type,Accept, Authortization`,\n        // 'Accept': 'application/json',\n        'Content-Type': 'application/json;charset=UTF-8'\n      }\n    } */\n    return config\n  })\n\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      /* const auth = useAuth();\n      const router = useRouter();\n      if (error.response.status === 401 || error.response.status === 403) {\n        auth.logout();\n        window.location.href = '/auth/login';\n      } */\n      return Promise.reject(error);\n    }\n  );\n\n  provide(apiSymbol, api)\n\n  return api\n}\n\nexport function useApi() {\n  const api = inject(apiSymbol)\n  if (!api) {\n    throw new Error('Api not properly injected in app')\n  }\n  return api\n}\n"],"names":[],"mappings":";;AAMO,MAAM,YAAyC,OAAO;AAEtD,SAAS,aAAa;AAGrB,QAAA,MAAM,MAAM,OAAO;AAAA,IACvB,SAAS;AAAA,EAAA,CACV;AAID,MAAI,aAAa,QAAQ,IAAI,CAAC,WAAW;AAEvC,UAAM,eAAe,OAAO;AACN,WAAO;AACtB,WAAA,SAAS,EAAE,GAAG;AAiBd,WAAA;AAAA,EAAA,CACR;AAED,MAAI,aAAa,SAAS;AAAA,IACxB,CAAC,aAAa;AAAA,IACd,CAAC,UAAU;AAOF,aAAA,QAAQ,OAAO,KAAK;AAAA,IAC7B;AAAA,EAAA;AAGF,UAAQ,WAAW,GAAG;AAEf,SAAA;AACT;"}