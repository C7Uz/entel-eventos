{"version":3,"file":"event.module-bd54a24e.js","sources":["../../../../store/services/event.service.ts","../../../../store/modules/event.module.ts"],"sourcesContent":["import { provideApi } from '~/composables/useApi'\nconst api = provideApi()\n\nconst findOne = async (slug: any) => {\n  try {\n    const { data } = await api.get(`/api/event/${slug}/`)\n    return data || null\n  } catch (error) {\n    return Promise.reject(error)\n  }\n}\n\nconst storeInscription = async (values: any) => {\n  try {\n    const { data } = await api.post(`/api/inscription/`, values)\n    return data || null\n  } catch (error) {\n    return Promise.reject(error)\n  }\n}\n\nconst findThanks = async () => {\n  try {\n    const { data } = await api.get(`/api/page/`)\n    return data || null\n  } catch (error) {\n    return Promise.reject(error)\n  }\n}\n\nexport default {\n  namespaced: true,\n  findOne,\n  storeInscription,\n  findThanks\n}\n","import { defineStore } from 'pinia'\nimport eventService from '~/store/services/event.service'\n\nexport const useEvent = defineStore('event', {\n    state: () => ({\n        event: ref<any>(Object.assign({}, null)),\n\n    }),\n    actions: {\n        setEvent(value: any) {\n            this.event = value;\n        },\n        async findOne(slug: any) {\n            try {\n                this.setEvent(null);\n                const response = await eventService.findOne(slug)\n                this.setEvent(response);\n                return { ok: true, response: response }\n            } catch (error: any) {\n                return { ok: false, error: error?.response || 'Error' }\n            }\n        },\n        async storeInscription(data: any) {\n            try {\n                const response = await eventService.storeInscription(data)\n                return { ok: true, response: response }\n            } catch (error: any) {\n                return { ok: false, error: error?.response || 'Error' }\n            }\n        },\n        async findThanks() {\n            try {\n                const response = await eventService.findThanks()\n                return { ok: true, response: response }\n            } catch (error: any) {\n                return { ok: false, error: error?.response || 'Error' }\n            }\n        }\n    },\n    getters: {\n    },\n})\n"],"names":[],"mappings":";;;AACA,MAAM,MAAM,WAAW;AAEvB,MAAM,UAAU,OAAO,SAAc;AAC/B,MAAA;AACF,UAAM,EAAE,SAAS,MAAM,IAAI,IAAI,cAAc,OAAO;AACpD,WAAO,QAAQ;AAAA,WACR;AACA,WAAA,QAAQ,OAAO,KAAK;AAAA,EAC7B;AACF;AAEA,MAAM,mBAAmB,OAAO,WAAgB;AAC1C,MAAA;AACF,UAAM,EAAE,KAAK,IAAI,MAAM,IAAI,KAAK,qBAAqB,MAAM;AAC3D,WAAO,QAAQ;AAAA,WACR;AACA,WAAA,QAAQ,OAAO,KAAK;AAAA,EAC7B;AACF;AAEA,MAAM,aAAa,YAAY;AACzB,MAAA;AACF,UAAM,EAAE,KAAK,IAAI,MAAM,IAAI,IAAI,YAAY;AAC3C,WAAO,QAAQ;AAAA,WACR;AACA,WAAA,QAAQ,OAAO,KAAK;AAAA,EAC7B;AACF;AAEA,MAAe,eAAA;AAAA,EACb,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA;AACF;AChCa,MAAA,WAAW,YAAY,SAAS;AAAA,EACzC,OAAO,OAAO;AAAA,IACV,OAAO,IAAS,OAAO,OAAO,CAAC,GAAG,IAAI,CAAC;AAAA,EAAA;AAAA,EAG3C,SAAS;AAAA,IACL,SAAS,OAAY;AACjB,WAAK,QAAQ;AAAA,IACjB;AAAA,IACA,MAAM,QAAQ,MAAW;AACjB,UAAA;AACA,aAAK,SAAS,IAAI;AAClB,cAAM,WAAW,MAAM,aAAa,QAAQ,IAAI;AAChD,aAAK,SAAS,QAAQ;AACf,eAAA,EAAE,IAAI,MAAM;eACd;AACL,eAAO,EAAE,IAAI,OAAO,QAAO,+BAAO,aAAY;MAClD;AAAA,IACJ;AAAA,IACA,MAAM,iBAAiB,MAAW;AAC1B,UAAA;AACA,cAAM,WAAW,MAAM,aAAa,iBAAiB,IAAI;AAClD,eAAA,EAAE,IAAI,MAAM;eACd;AACL,eAAO,EAAE,IAAI,OAAO,QAAO,+BAAO,aAAY;MAClD;AAAA,IACJ;AAAA,IACA,MAAM,aAAa;AACX,UAAA;AACM,cAAA,WAAW,MAAM,aAAa;AAC7B,eAAA,EAAE,IAAI,MAAM;eACd;AACL,eAAO,EAAE,IAAI,OAAO,QAAO,+BAAO,aAAY;MAClD;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,SAAS,CACT;AACJ,CAAC;"}