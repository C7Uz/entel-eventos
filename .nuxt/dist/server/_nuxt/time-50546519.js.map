{"version":3,"file":"time-50546519.js","sources":["../../../../composables/useFormatDateDay.ts","../../../../composables/useFormatTime.ts","../../../../public/assets/img/icons/time.svg"],"sourcesContent":["import moment from 'moment';\nconst months: any = {\n  JANUARY: 'Enero',\n  FEBRUARY: 'Febrero',\n  MARCH: 'Marzo',\n  APRIL: 'Abril',\n  MAY: 'Mayo',\n  JUNE: 'Junio',\n  JULY: 'Julio',\n  AUGUST: 'Agosto',\n  SEPTEMBER: 'Septiembre',\n  OCTOBER: 'Octubre',\n  NOVEMBER: 'Noviembre',\n  DECEMBER: 'Diciembre',\n};\n\nconst days: any = {\n  SUNDAY: 'Domingo',\n  MONDAY: 'Lunes',\n  TUESDAY: 'Martes',\n  WEDNESDAY: 'Miércoles',\n  THURSDAY: 'Jueves',\n  FRIDAY: 'Viernes',\n  SATURDAY: 'Sábado',\n};\n\nexport function useFormatDateDay(value: any) {\n  let dateString = '';\n  if(value){\n      let parseDate = value.split('T');\n      if(parseDate.length > 1){\n          let newDate = parseDate[0];\n          let newTime = parseDate[1].substring(0, 8);\n          let newDateString = `${newDate} ${newTime}`;\n          let day = moment(newDateString).format('dddd');\n          let month = moment(newDateString).format('MMMM');\n          let monthEs = months[month.toUpperCase()];\n          let dayEs = days[day.toUpperCase()];\n          dateString = dayEs + ' ' +  moment(newDateString).format('D [de]') + ' ' + monthEs;\n      }\n  }\n  return dateString;\n}\n","import moment from 'moment';\n\nexport function useFormatTime(value: any) {\n  let dateString = '';\n  if(value){\n      let parseDate = value.split('T');\n      if(parseDate.length > 1){\n          let newDate = parseDate[0];\n          let newTime = parseDate[1].substring(0, 8);\n          let newDateString = `${newDate} ${newTime}`;\n          dateString = moment(newDateString).format('hh:mm a');\n      }\n  }\n  return dateString;\n}\n","export default \"__VITE_ASSET__627e3138__\""],"names":[],"mappings":";AACA,MAAM,SAAc;AAAA,EAClB,SAAS;AAAA,EACT,UAAU;AAAA,EACV,OAAO;AAAA,EACP,OAAO;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,SAAS;AAAA,EACT,UAAU;AAAA,EACV,UAAU;AACZ;AAEA,MAAM,OAAY;AAAA,EAChB,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,WAAW;AAAA,EACX,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,UAAU;AACZ;AAEO,SAAS,iBAAiB,OAAY;AAC3C,MAAI,aAAa;AACjB,MAAG,OAAM;AACD,QAAA,YAAY,MAAM,MAAM,GAAG;AAC5B,QAAA,UAAU,SAAS,GAAE;AAChB,UAAA,UAAU,UAAU,CAAC;AACzB,UAAI,UAAU,UAAU,CAAC,EAAE,UAAU,GAAG,CAAC;AACrC,UAAA,gBAAgB,GAAG,WAAW;AAClC,UAAI,MAAM,OAAO,aAAa,EAAE,OAAO,MAAM;AAC7C,UAAI,QAAQ,OAAO,aAAa,EAAE,OAAO,MAAM;AAC/C,UAAI,UAAU,OAAO,MAAM,YAAa,CAAA;AACxC,UAAI,QAAQ,KAAK,IAAI,YAAa,CAAA;AACrB,mBAAA,QAAQ,MAAO,OAAO,aAAa,EAAE,OAAO,QAAQ,IAAI,MAAM;AAAA,IAC/E;AAAA,EACJ;AACO,SAAA;AACT;ACxCO,SAAS,cAAc,OAAY;AACxC,MAAI,aAAa;AACjB,MAAG,OAAM;AACD,QAAA,YAAY,MAAM,MAAM,GAAG;AAC5B,QAAA,UAAU,SAAS,GAAE;AAChB,UAAA,UAAU,UAAU,CAAC;AACzB,UAAI,UAAU,UAAU,CAAC,EAAE,UAAU,GAAG,CAAC;AACrC,UAAA,gBAAgB,GAAG,WAAW;AAClC,mBAAa,OAAO,aAAa,EAAE,OAAO,SAAS;AAAA,IACvD;AAAA,EACJ;AACO,SAAA;AACT;ACdA,MAAe,aAAA,KAAA,iBAAA,mBAAA;"}